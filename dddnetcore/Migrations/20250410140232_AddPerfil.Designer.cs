// <auto-generated />
using System;
using DDDSample1.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDNetCore.Migrations
{
    [DbContext(typeof(DDDSample1DbContext))]
    [Migration("20250410140232_AddPerfil")]
    partial class AddPerfil
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("DDDSample1.Domain.Categories.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DDDSample1.Domain.Families.Family", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("DDDSample1.Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("dddnetcore.Domain.Indicadores.Indicador", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Indicadores");
                });

            modelBuilder.Entity("dddnetcore.Domain.Orcamentos.Orcamento", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<double>("GastoExecutado")
                        .HasColumnType("REAL");

                    b.Property<double>("GastoPlaneado")
                        .HasColumnType("REAL");

                    b.Property<Guid>("RubricaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RubricaId");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("dddnetcore.Domain.Perfis.Perfil", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("dddnetcore.Domain.Rubricas.Rubrica", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rubricas");
                });

            modelBuilder.Entity("dddnetcore.Domain.Indicadores.Indicador", b =>
                {
                    b.OwnsOne("dddnetcore.Domain.Indicadores.NomeIndicador", "Nome", b1 =>
                        {
                            b1.Property<Guid>("IndicadorId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("NomeIndicador");

                            b1.HasKey("IndicadorId");

                            b1.ToTable("Indicadores");

                            b1.WithOwner()
                                .HasForeignKey("IndicadorId");
                        });

                    b.OwnsOne("dddnetcore.Domain.Indicadores.ValorAtual", "ValorAtual", b1 =>
                        {
                            b1.Property<Guid>("IndicadorId")
                                .HasColumnType("TEXT");

                            b1.Property<double>("Valor")
                                .HasColumnType("REAL")
                                .HasColumnName("ValorAtual");

                            b1.HasKey("IndicadorId");

                            b1.ToTable("Indicadores");

                            b1.WithOwner()
                                .HasForeignKey("IndicadorId");
                        });

                    b.OwnsOne("dddnetcore.Domain.Indicadores.ValorMaximo", "ValorMaximo", b1 =>
                        {
                            b1.Property<Guid>("IndicadorId")
                                .HasColumnType("TEXT");

                            b1.Property<double>("Valor")
                                .HasColumnType("REAL")
                                .HasColumnName("ValorMaximo");

                            b1.HasKey("IndicadorId");

                            b1.ToTable("Indicadores");

                            b1.WithOwner()
                                .HasForeignKey("IndicadorId");
                        });

                    b.Navigation("Nome");

                    b.Navigation("ValorAtual");

                    b.Navigation("ValorMaximo");
                });

            modelBuilder.Entity("dddnetcore.Domain.Orcamentos.Orcamento", b =>
                {
                    b.HasOne("dddnetcore.Domain.Rubricas.Rubrica", "Rubrica")
                        .WithMany()
                        .HasForeignKey("RubricaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rubrica");
                });

            modelBuilder.Entity("dddnetcore.Domain.Perfis.Perfil", b =>
                {
                    b.OwnsOne("dddnetcore.Domain.Perfis.DescricaoPerfil", "DescricaoPerfil", b1 =>
                        {
                            b1.Property<Guid>("PerfilId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("DescricaoPerfil");

                            b1.HasKey("PerfilId");

                            b1.ToTable("Perfil");

                            b1.WithOwner()
                                .HasForeignKey("PerfilId");
                        });

                    b.OwnsOne("dddnetcore.Domain.Perfis.PMsTotais", "PMs", b1 =>
                        {
                            b1.Property<Guid>("PerfilId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Valor")
                                .HasColumnType("INTEGER")
                                .HasColumnName("PMsTotais");

                            b1.HasKey("PerfilId");

                            b1.ToTable("Perfil");

                            b1.WithOwner()
                                .HasForeignKey("PerfilId");
                        });

                    b.Navigation("DescricaoPerfil")
                        .IsRequired();

                    b.Navigation("PMs")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
